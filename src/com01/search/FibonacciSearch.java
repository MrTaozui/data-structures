package com01.search;

/**
 * @author taojj .
 *
 * 斐波那契查找 （黄金比例查找方法）数组是有序的
 * 理解说明：斐波那契 查找 就是 按照mid 左边/数组length 未黄金比例的
 * 查找方法，因为 通过观察斐波那契数列可以看到 fi(k)/fi(k+1) 越来越接近黄金比例所以使用
 * 斐波那契数列，通过斐波那契数列来找到分割点
 *
 * 所以首先，根据数组的长度 在斐波那契 数组中找到对应的长度（假设我们按照斐波那契方法来查找，则fib那契
 * 数组就存储了 我们要查找的每次mid的规律） 假设要查找的数组长度是8  对应的mid的查找规律对于fib那契数组
 * 就为 1 1 2 3 5 8 先从mid = 5位置开始找， 假设arr[mid]< findval  则从左半部分 长度为5的数组里面继续
 * 查找按照黄金比例查找
 * 所以构建fib那契数 数组是关键
 * 总结 斐波那契数组存储了 黄金比例查找mid 的值
 * 注意一个规律 数组长度是fiArr[k] 左边数组长度是fiArr[k-1] 查找的
 * 右边数组的长度是fiArr[k-2] 如果  fiArr[n]<findArr.length <fiArr[n+1]
 * 重新构建一个数组长度为fiArr[n+1] 把原数组的值拷贝进去，其余的用高位值填充
 *
 *
 * 可以理解成折半查找  这时的fib那契数列 就存了 每次查找mid 的值为 上一步的一半
 */
public class FibonacciSearch {
}
